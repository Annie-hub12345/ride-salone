generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model user {
  id                String   @id @default(uuid()) // Use UUID for PostgreSQL
  name              String?
  phone_number      String   @unique
  email             String?  @unique
  notificationToken String?
  ratings           Float    @default(0)
  totalRides        Float    @default(0)
  createdAt         DateTime @default(now())
  updatedAt         DateTime @updatedAt
  rides             rides[]  @relation("UserRides")
}

enum VehicleType {
  Car
  Motorcycle
  CNG
}

model driver {
  id                  String      @id @default(uuid()) // Use UUID for PostgreSQL
  name                String
  country             String
  phone_number        String      @unique
  email               String      @unique
  vehicle_type        VehicleType
  registration_number String      @unique
  registration_date   String
  driving_license     String
  vehicle_color       String?
  rate                String
  notificationToken   String?
  ratings             Float       @default(0)
  totalEarning        Float       @default(0)
  totalRides          Float       @default(0)
  pendingRides        Float       @default(0)
  cancelRides         Float       @default(0)
  status              String      @default("inactive")
  createdAt           DateTime    @default(now())
  updatedAt           DateTime    @updatedAt
  rides               rides[]     @relation("DriverRides")
}

model rides {
  id                      String   @id @default(uuid()) // Use UUID for PostgreSQL
  userId                  String
  driverId                String
  charge                  Float
  currentLocationName     String
  destinationLocationName String
  distance                String
  status                  String
  rating                  Float?
  user                    user     @relation("UserRides", fields: [userId], references: [id], onDelete: Cascade)
  driver                  driver   @relation("DriverRides", fields: [driverId], references: [id], onDelete: Cascade)
  createdAt               DateTime @default(now())
  updatedAt               DateTime @updatedAt
}
